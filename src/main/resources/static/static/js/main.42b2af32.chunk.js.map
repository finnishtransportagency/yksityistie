{"version":3,"sources":["img/YT_banneri.PNG","img/oskari_placeholder.png","i18n/index.js","util/Language.jsx","components/Landingpage.jsx","models/maitenanceAssociation.js","models/digiroadStatus.js","models/privateRoad.js","models/index.js","services/httpService.js","services/privateRoadService.js","components/inputs/utils/InfoSymbol.jsx","components/inputs/TextInput.jsx","components/privateRoadForm/Page1.jsx","util/Oskari.jsx","components/inputs/SelectInput.jsx","components/privateRoadForm/Page2.jsx","components/privateRoadForm/Page3a.jsx","components/inputs/CheckBoxInput.jsx","components/privateRoadForm/Page3b.jsx","components/privateRoadForm/SummaryInfoField.jsx","components/privateRoadForm/DeliveryMethod.jsx","components/privateRoadForm/Page4.jsx","components/privateRoadForm/index.jsx","components/ExitPage.jsx","App.js","index.js"],"names":["module","exports","options","resources","fi","sv","lng","window","navigator","language","userLanguage","substr","fallbackLng","interpolation","escapeValue","i18n","use","initReactI18next","init","err","console","log","Object","keys","services","resourceStore","data","includes","changeLanguage","Language","useTranslation","className","type","name","onChange","defaultChecked","LandingPage","setPage","t","Row","Col","Image","src","BannerImage","fluid","Form","Group","controlId","align","target","href","Button","size","onClick","schemaObject","tiekunta","Yup","min","max","required","kunta","kayttooikeusyksikkotunnus","optional","ilmoittaja","puhelinnumero","email","ilmoittajaSuhde","schema","shape","schemaAsArray","initialValues","tiekuntaDigiroadissa","roads","of","tiekunnanTienNimi","painorajoitus","painorajoitus_suurin_massa","painorajoitus_lisakilvet","kelirikkoToistuva","kelirikkoPainorajoitus","kelirikkoAlkuKuukausi","kelirikkoAlkuAika","kelirikkoLoppuKuukausi","kelirikkoLoppuAika","ajokielto","ajokieltoLisakilvet","ajoesteTiella","ajoeesteTyyppi","nopeusRajotus","karttaLinkit","muutTiedot","ajoesteTyyppi","privateRoadYupSchema","maitenanceAssociation","digiroadStatus","privateRoad","privateRoadYupInitialValues","axios","defaults","baseURL","process","interceptors","response","error","status","toast","Promise","reject","get","post","put","delete","apiEndpoint","submitPrivateRoad","a","http","responseType","headers","reCAPTCHA","InfoSymbol","title","content","OverlayTrigger","trigger","placement","overlay","Popover","Title","Content","dangerouslySetInnerHTML","__html","Badge","TextInput","props","label","info","field","form","errors","touched","isValid","as","Label","Control","rows","value","placeholder","isInvalid","Feedback","Page1","values","setTouched","formPage","setFormPage","handlePageSubmit","mapSchema","reduce","aggregate","item","validate","warning","component","Oskari","url","style","border","width","height","SelectInput","map","o","key","text","Page2","ButtonGroup","Page3a","render","push","remove","road","index","sm","variant","CheckBoxInput","xs","Check","Page3b","monthOptions","Array","month","Card","Header","length","SummaryInfoField","DeliveryMethod","disabled","Page4","setValues","isSubmitting","Body","Spinner","animation","role","sitekey","tietojenOikeellisuus","toimitusTapa","FormikEnhncer","withFormik","validationSchema","model","mapPropsToValues","handleSubmit","formikBag","kuukaudet","FileSaver","useState","ExitPage","location","App","page","Container","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.42b2af32.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/YT_banneri.7645fd6e.PNG\";","module.exports = __webpack_public_path__ + \"static/media/oskari_placeholder.4ad50f4c.png\";","import i18n from 'i18next'\r\nimport { initReactI18next } from 'react-i18next'\r\nimport fi from './fi'\r\nimport sv from './sv'\r\n\r\n/*\r\ni18next-browser-languagedetector plugin is not used as\r\ndepending on the browser, it might return locales like \"fi-FI\" or only \"fi\"\r\nfrom window.navigator and there is no easy way to shorten it for i18next to use.\r\n*/\r\nconst options = {\r\n  resources: { fi, sv },\r\n  lng: (window.navigator.language || window.navigator.userLanguage).substr(0, 2),\r\n  fallbackLng: 'fi',\r\n  interpolation: { escapeValue: false }\r\n}\r\n\r\nfunction initCallback(err) {\r\n  if (err) {\r\n    return console.log('Error while initializing i18n', err)\r\n  }\r\n\r\n  /*\r\n    Set first fallback language (options.fallbackLng) to language if translation file for users locale isn't provided.\r\n    i18next doesn't change its language to fallback language if users locale isn't supported by the application\r\n    but instead will resolve translations by using fallback languages.\r\n    */\r\n  if (!Object.keys(i18n.services.resourceStore.data).includes(i18n.language)) {\r\n    i18n.changeLanguage(i18n.services.resourceStore.options.fallbackLng[0])\r\n  }\r\n}\r\n\r\ni18n.use(initReactI18next).init(options, initCallback)\r\n\r\nexport default i18n\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst Language = () => {\r\n  const { i18n } = useTranslation()\r\n\r\n  return (\r\n    <div className=\"text-right\">\r\n      <div className=\"btn-group btn-group-toggle\">\r\n        <label className={'btn btn-outline-primary ' + (i18n.language === 'fi' ? 'active' : '')}>\r\n          suomeksi\r\n          <input\r\n            type=\"radio\"\r\n            name=\"lng_options\"\r\n            onChange={() => i18n.changeLanguage('fi')}\r\n            defaultChecked={i18n.language === 'fi' ? true : false}\r\n          />\r\n        </label>\r\n        <label className={'btn btn-outline-primary ' + (i18n.language === 'sv' ? 'active' : '')}>\r\n          på svenska\r\n          <input\r\n            type=\"radio\"\r\n            name=\"lng_options\"\r\n            onChange={() => i18n.changeLanguage('sv')}\r\n            defaultChecked={i18n.language === 'sv' ? true : false}\r\n          />\r\n        </label>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Language\r\n","import React from 'react'\r\nimport { Row, Col, Form, Image, Button } from 'react-bootstrap'\r\nimport { useTranslation } from 'react-i18next'\r\nimport BannerImage from '../img/YT_banneri.PNG'\r\n\r\nconst LandingPage = ({ setPage }) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <Row>\r\n          <Col>\r\n            <Image src={BannerImage} fluid></Image>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mb-3 mt-3\">\r\n          <Col className=\"text-center\">\r\n            <h1>{t('landing.welcome')}</h1>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mb-5\">\r\n          <Col>\r\n            <Form.Group controlId=\"lomakeOhje\" align=\"center\">\r\n              <p>{t('landing.body')}</p>\r\n              <p>{t('landing.body_notice')}</p>\r\n              <a target=\"_blanc\" href={t('landing.link_url')}>\r\n                {t('landing.link_label')}\r\n              </a>\r\n            </Form.Group>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Button size=\"lg\" onClick={() => setPage(1)}>\r\n                {t('common.next')}\r\n              </Button>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default LandingPage\r\n","import * as Yup from 'yup'\r\n\r\nconst schemaObject = {\r\n  tiekunta: Yup.string()\r\n    .min(3)\r\n    .max(50)\r\n    .required(),\r\n  kunta: Yup.string()\r\n    .min(2)\r\n    .max(30)\r\n    .required(),\r\n  kayttooikeusyksikkotunnus: Yup.string()\r\n    .max(30)\r\n    .optional(),\r\n  ilmoittaja: Yup.string()\r\n    .min(5)\r\n    .max(40)\r\n    .required(),\r\n  puhelinnumero: Yup.string()\r\n    .min(10)\r\n    .max(15)\r\n    .required(),\r\n  email: Yup.string()\r\n    .email()\r\n    .optional(),\r\n  ilmoittajaSuhde: Yup.string().optional()\r\n}\r\n\r\nconst initialValues = {\r\n  tiekunta: '',\r\n  kunta: '',\r\n  kayttooikeusyksikkotunnus: '',\r\n  ilmoittaja: '',\r\n  puhelinnumero: '',\r\n  email: '',\r\n  ilmoittajaSuhde: ''\r\n}\r\n\r\n// Page schema for one page at a time validation\r\nexport const schema = Yup.object().shape(schemaObject)\r\nexport const schemaAsArray = Object.keys(schemaObject)\r\n\r\nexport default { schema, schemaAsArray, initialValues, schemaObject }\r\n","import * as Yup from 'yup'\r\n\r\nexport const schemaObject = {\r\n  tiekuntaDigiroadissa: Yup.boolean().required()\r\n}\r\n\r\nexport const initialValues = {\r\n  tiekuntaDigiroadissa: ''\r\n}\r\n\r\n// Page schema for one page at a time validation\r\nexport const schema = Yup.object().shape(schemaObject)\r\nexport const schemaAsArray = Object.keys(schemaObject)\r\n\r\nexport default { schema, schemaObject, initialValues, schemaAsArray }\r\n","import * as Yup from 'yup'\r\n\r\nexport const schemaObject = {\r\n  roads: Yup.array()\r\n    .of(\r\n      Yup.object().shape({\r\n        tiekunnanTienNimi: Yup.string()\r\n          .min(3)\r\n          .max(50)\r\n          .required(),\r\n        painorajoitus: Yup.boolean().optional(),\r\n        painorajoitus_suurin_massa: Yup.string()\r\n          .max(10)\r\n          .optional(),\r\n        painorajoitus_lisakilvet: Yup.string()\r\n          .max(50)\r\n          .optional(),\r\n        kelirikkoToistuva: Yup.boolean().optional(),\r\n        kelirikkoPainorajoitus: Yup.string()\r\n          .max(100)\r\n          .optional(),\r\n        kelirikkoAlkuKuukausi: Yup.string()\r\n          .max(20)\r\n          .optional(),\r\n        kelirikkoAlkuAika: Yup.string()\r\n          .max(20)\r\n          .optional(),\r\n        kelirikkoLoppuKuukausi: Yup.string()\r\n          .max(20)\r\n          .optional(),\r\n        kelirikkoLoppuAika: Yup.string()\r\n          .max(20)\r\n          .optional(),\r\n        ajokielto: Yup.string()\r\n          .max(100)\r\n          .optional(),\r\n        ajokieltoLisakilvet: Yup.string()\r\n          .max(100)\r\n          .optional(),\r\n        ajoesteTiella: Yup.boolean().optional(),\r\n        ajoeesteTyyppi: Yup.string().optional(),\r\n        nopeusRajotus: Yup.string()\r\n          .max(10)\r\n          .optional(),\r\n        karttaLinkit: Yup.string().max(300),\r\n        muutTiedot: Yup.string().max(300)\r\n      })\r\n    )\r\n    .min(1)\r\n}\r\n\r\nexport const initialValues = {\r\n  roads: [\r\n    {\r\n      tiekunnanTienNimi: '',\r\n      painorajoitus: false,\r\n      painorajoitus_suurin_massa: '',\r\n      painorajoitus_lisakilvet: '',\r\n      kelirikkoToistuva: false,\r\n      kelirikkoPainorajoitus: '',\r\n      kelirikkoAlkuKuukausi: '',\r\n      kelirikkoAlkuAika: 'alku',\r\n      kelirikkoLoppuKuukausi: '',\r\n      kelirikkoLoppuAika: 'loppu',\r\n      ajokielto: '',\r\n      ajokieltoLisakilvet: '',\r\n      ajoesteTiella: false,\r\n      ajoesteTyyppi: '',\r\n      nopeusRajotus: '',\r\n      karttaLinkit: '',\r\n      muutTiedot: ''\r\n    }\r\n  ]\r\n}\r\n\r\n// Page schema for one page at a time validation\r\nexport const schema = Yup.object().shape(schemaObject)\r\nexport const schemaAsArray = Object.keys(schemaObject)\r\n\r\nexport default { schema, schemaObject, initialValues, schemaAsArray }\r\n","import * as Yup from 'yup'\r\nimport maitenanceAssociation from './maitenanceAssociation'\r\nimport digiroadStatus from './digiroadStatus'\r\nimport privateRoad from './privateRoad'\r\n\r\nexport default {\r\n  privateRoadYupSchema: Yup.object().shape({\r\n    ...maitenanceAssociation.schemaObject,\r\n    ...digiroadStatus.schemaObject,\r\n    ...privateRoad.schemaObject\r\n  }),\r\n\r\n  privateRoadYupInitialValues: {\r\n    ...maitenanceAssociation.initialValues,\r\n    ...digiroadStatus.initialValues,\r\n    ...privateRoad.initialValues\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\n// eslint-disable-next-line no-undef\r\naxios.defaults.baseURL = process.env.REACT_APP_API_ENDPOINT\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError =\r\n    error.response && error.response.status >= 400 && error.response.status < 500\r\n\r\n  if (!expectedError) {\r\n    toast.error('An unexpected error occurrred.')\r\n  }\r\n\r\n  return Promise.reject(error)\r\n})\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete\r\n}\r\n","import http from './httpService'\r\n\r\nconst apiEndpoint = '/privateroad'\r\n\r\nexport async function submitPrivateRoad(data) {\r\n  return http.post(apiEndpoint, data, {\r\n    responseType: 'blob',\r\n    headers: { 'g-recaptcha-response': data.reCAPTCHA }\r\n  })\r\n}\r\n","import React from 'react'\r\nimport { Badge, Popover, OverlayTrigger } from 'react-bootstrap'\r\nimport { FaQuestion } from 'react-icons/fa'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst InfoSymbol = ({ title, content }) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <OverlayTrigger\r\n      trigger=\"hover\"\r\n      placement=\"left\"\r\n      overlay={\r\n        <Popover>\r\n          <Popover.Title>{t(title)}</Popover.Title>\r\n          <Popover.Content dangerouslySetInnerHTML={{ __html: t(content) }} />\r\n        </Popover>\r\n      }\r\n    >\r\n      <Badge>\r\n        <FaQuestion />\r\n      </Badge>\r\n    </OverlayTrigger>\r\n  )\r\n}\r\n\r\nexport default InfoSymbol\r\n","import React from 'react'\r\nimport { Form, Row, Col } from 'react-bootstrap'\r\nimport { useTranslation } from 'react-i18next'\r\nimport InfoSybmol from './utils/InfoSymbol'\r\n\r\nconst TextInput = props => {\r\n  const { t } = useTranslation()\r\n  const { label, info, required, type } = props\r\n  const { field, form } = props\r\n  const { errors, touched } = form\r\n\r\n  const error = errors[field.name] && touched[field.name] ? errors[field.name] : false\r\n  const isValid = !error && touched[field.name]\r\n\r\n  return (\r\n    <Form.Group as=\"div\" controlId={field.name}>\r\n      <Row>\r\n        <Col>\r\n          <Form.Label>\r\n            {t(label)}\r\n            &nbsp;\r\n            {required && <span className=\"text-muted\">({t('common.required')})</span>}\r\n          </Form.Label>\r\n        </Col>\r\n        {info && (\r\n          <Col className=\"col-auto\">\r\n            <InfoSybmol title={label} content={info} />\r\n          </Col>\r\n        )}\r\n      </Row>\r\n      <Form.Control\r\n        as={type || 'input'}\r\n        rows=\"5\"\r\n        {...props}\r\n        {...field}\r\n        value={field.value || ''}\r\n        placeholder={t(label)}\r\n        isInvalid={error}\r\n        isValid={isValid}\r\n      ></Form.Control>\r\n      <Form.Control.Feedback type=\"invalid\">{t('common.required')}</Form.Control.Feedback>\r\n    </Form.Group>\r\n  )\r\n}\r\n\r\nexport default TextInput\r\n","import React from 'react'\r\nimport { Field } from 'formik'\r\nimport TextInput from '../inputs/TextInput'\r\nimport { Row, Col, Button } from 'react-bootstrap'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { toast } from 'react-toastify'\r\nimport { schema, schemaAsArray } from '../../models/maitenanceAssociation'\r\n\r\nconst Page1 = props => {\r\n  const { t } = useTranslation()\r\n  const { values, setTouched, formPage, setFormPage } = props\r\n\r\n  if (formPage !== 1) return null\r\n\r\n  const handlePageSubmit = async () => {\r\n    const mapSchema = schemaAsArray.reduce((aggregate, item) => {\r\n      return { ...aggregate, [item]: true }\r\n    }, {})\r\n    setTouched(mapSchema)\r\n    try {\r\n      await schema.validate(values)\r\n      // await page1Yup.validate(values)\r\n      setFormPage(formPage + 1)\r\n    } catch (exeption) {\r\n      toast.warning(t('common.pagevalidationerror'))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <Row className=\"mb-3 mt-3\">\r\n          <Col>\r\n            <h2>{t('tiekunta.title')}</h2>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Field\r\n          name=\"tiekunta\"\r\n          required\r\n          label=\"tiekunta.tiekunta\"\r\n          info=\"tiekunta.tiekunta_info\"\r\n          component={TextInput}\r\n        ></Field>\r\n\r\n        <Field\r\n          name=\"kunta\"\r\n          required\r\n          label=\"tiekunta.municipality\"\r\n          info=\"tiekunta.municipality_info\"\r\n          component={TextInput}\r\n        ></Field>\r\n\r\n        <Field\r\n          name=\"kayttooikeusyksikkotunnus\"\r\n          label=\"tiekunta.kayttooikeusyksikkotunnus\"\r\n          info=\"tiekunta.kayttooikeusyksikkotunnus_info\"\r\n          component={TextInput}\r\n        ></Field>\r\n\r\n        <Field\r\n          name=\"ilmoittaja\"\r\n          required\r\n          label=\"tiekunta.informants_name\"\r\n          info=\"tiekunta.informants_name_info\"\r\n          component={TextInput}\r\n        ></Field>\r\n\r\n        <Field\r\n          name=\"puhelinnumero\"\r\n          required\r\n          label=\"tiekunta.phone_number\"\r\n          info=\"tiekunta.phone_number_info\"\r\n          component={TextInput}\r\n        ></Field>\r\n\r\n        <Field\r\n          name=\"email\"\r\n          label=\"tiekunta.email_address\"\r\n          info=\"tiekunta.email_address_info\"\r\n          component={TextInput}\r\n        ></Field>\r\n\r\n        <Field\r\n          name=\"ilmoittajaSuhde\"\r\n          type=\"textarea\"\r\n          label=\"tiekunta.suhde_tiehen\"\r\n          info=\"tiekunta.suhde_tiehen_info\"\r\n          component={TextInput}\r\n        ></Field>\r\n\r\n        <Row className=\"mb-5\">\r\n          <Col>\r\n            <Button onClick={() => handlePageSubmit()}>{t('common.next')}</Button>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default Page1\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport PlaceHolder from '../img/oskari_placeholder.png'\r\nimport { Image, Row } from 'react-bootstrap'\r\n\r\nconst Oskari = () => {\r\n  const { i18n } = useTranslation()\r\n\r\n  // At the development time Oskari gives warnings. Placeholder prevents mixing up\r\n  // this applications and Oskaris error messages during development.\r\n  // eslint-disable-next-line no-undef\r\n  if (process.env.NODE_ENV === 'development') {\r\n    return (\r\n      <Row className=\"justify-content-md-center mb-4\">\r\n        <Image src={PlaceHolder} fluid />\r\n      </Row>\r\n    )\r\n  }\r\n\r\n  const lang = i18n.language\r\n  const url =\r\n    'https://kehitysjulkinen.vayla.fi/oskari/?uuid=af456730-ce3e-4332-9175-bdc9636db361&lang=' +\r\n    lang\r\n  const style = {\r\n    border: '1px solid blue',\r\n    width: '100%',\r\n    height: '500px'\r\n  }\r\n  const title = 'oskari'\r\n  return <iframe title={title} src={url} style={style}></iframe>\r\n}\r\n\r\nexport default Oskari\r\n","import React from 'react'\r\nimport { Form, Row, Col } from 'react-bootstrap'\r\nimport { useTranslation } from 'react-i18next'\r\nimport InfoSybmol from './utils/InfoSymbol'\r\n\r\nconst SelectInput = props => {\r\n  const { t } = useTranslation()\r\n  const { label, info, required, options } = props\r\n  const { field, form } = props\r\n  const { errors, touched } = form\r\n\r\n  const error = errors[field.name] && touched[field.name] ? errors[field.name] : false\r\n  const isValid = !error && touched[field.name]\r\n  return (\r\n    <Form.Group as=\"div\">\r\n      <Row>\r\n        <Col>\r\n          <Form.Label>\r\n            {t(label)}\r\n            &nbsp;\r\n            {required && <span className=\"text-muted\">({t('common.required')})</span>}\r\n          </Form.Label>\r\n        </Col>\r\n        {info && (\r\n          <Col className=\"col-auto\">\r\n            <InfoSybmol title={t(label)} content={t(info)} />\r\n          </Col>\r\n        )}\r\n      </Row>\r\n      <Form.Control as=\"select\" {...props} {...field} isInvalid={error} isValid={isValid}>\r\n        {options.map(o => {\r\n          return (\r\n            <option key={o.value} value={o.value}>\r\n              {t(o.text)}\r\n            </option>\r\n          )\r\n        })}\r\n      </Form.Control>\r\n      <Form.Control.Feedback type=\"invalid\">{t('common.chooseOne')}</Form.Control.Feedback>\r\n    </Form.Group>\r\n  )\r\n}\r\n\r\nexport default SelectInput\r\n","import React from 'react'\r\nimport { Field } from 'formik'\r\nimport { Row, Col, ButtonGroup, Button } from 'react-bootstrap'\r\nimport { Translation, useTranslation } from 'react-i18next'\r\nimport Oskari from '../../util/Oskari'\r\nimport SelectInput from '../inputs/SelectInput'\r\nimport digiroadStatus from '../../models/digiroadStatus'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst Page2 = props => {\r\n  const { formPage, setFormPage, values, setTouched } = props\r\n  const { t } = useTranslation()\r\n\r\n  if (formPage !== 2) return null\r\n\r\n  const handlePageSubmit = async () => {\r\n    const mapSchema = digiroadStatus.schemaAsArray.reduce((aggregate, item) => {\r\n      return { ...aggregate, [item]: true }\r\n    }, {})\r\n    setTouched(mapSchema)\r\n    try {\r\n      await digiroadStatus.schema.validate(values)\r\n\r\n      if (values.tiekuntaDigiroadissa === 'true') {\r\n        setFormPage(3)\r\n      } else {\r\n        setFormPage(4)\r\n      }\r\n    } catch (exeption) {\r\n      toast.warning(t('common.pagevalidationerror'))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <Row className=\"mb-3 mt-3\">\r\n          <Col>\r\n            <h2>\r\n              <Translation>{t => t('map.verify_information')}</Translation>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* Embedded Oskari Iframe */}\r\n        <Oskari />\r\n\r\n        <Field\r\n          name=\"tiekuntaDigiroadissa\"\r\n          required\r\n          options={[\r\n            { value: '', text: 'map.select' },\r\n            { value: true, text: 'map.already_submitted_no_changes' },\r\n            { value: false, text: 'map.submit_changed_or_missing_info' }\r\n          ]}\r\n          label=\"map.verify_information\"\r\n          info=\"map.verify_information_info\"\r\n          component={SelectInput}\r\n        ></Field>\r\n        <Row>\r\n          <Col>\r\n            <ButtonGroup>\r\n              <Button onClick={() => setFormPage(formPage - 1)}>\r\n                <Translation>{t => t('common.previous')}</Translation>\r\n              </Button>\r\n              <Button onClick={() => handlePageSubmit()}>\r\n                <Translation>{t => t('common.next')}</Translation>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default Page2\r\n","import React from 'react'\r\nimport { Row, Col, Button, ButtonGroup } from 'react-bootstrap'\r\nimport { useTranslation, Translation } from 'react-i18next'\r\nimport privateRoad from '../../models/privateRoad'\r\nimport { toast } from 'react-toastify'\r\nimport { FieldArray, Field } from 'formik'\r\nimport TextInput from '../inputs/TextInput'\r\n\r\nconst Page3a = props => {\r\n  const { t } = useTranslation()\r\n  const { formPage, setFormPage, values } = props\r\n\r\n  const handlePageSubmit = async () => {\r\n    try {\r\n      await privateRoad.schema.validate(values)\r\n      setFormPage(5)\r\n    } catch (exeption) {\r\n      toast.warning(t('common.pagevalidationerror'))\r\n    }\r\n  }\r\n\r\n  if (formPage !== 3) return null\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"mt-3\">\r\n        <Col>\r\n          <h2>{t('map.already_submitted_no_changes')}</h2>\r\n        </Col>\r\n      </Row>\r\n\r\n      <FieldArray\r\n        name=\"roads\"\r\n        render={({ push, remove }) => (\r\n          <>\r\n            {values.roads.map((road, index) => (\r\n              <div key={index}>\r\n                <Row className=\"border\">\r\n                  <Col sm={10} className=\"mt-3\">\r\n                    <Field\r\n                      name={`roads.${index}.tiekunnanTienNimi`}\r\n                      required\r\n                      label=\"tie.road_name\"\r\n                      info=\"tie.road_name_info\"\r\n                      component={TextInput}\r\n                    ></Field>\r\n                  </Col>\r\n                  <Col sm={2} className=\"d-flex flex-column\">\r\n                    <Button className=\"mt-5\" onClick={() => remove(index)} variant=\"danger\">\r\n                      {t('tie.poista_tie')}\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            ))}\r\n            <Row className=\"mt-3\">\r\n              <Col></Col>\r\n              <Col className=\"col-auto\">\r\n                <Button size=\"lg\" variant=\"success\" onClick={() => push({})}>\r\n                  {t('tie.lisaa_tie')}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )}\r\n      ></FieldArray>\r\n\r\n      <Row className=\"mt-5 mb-5\">\r\n        <Col>\r\n          <ButtonGroup>\r\n            <Button onClick={() => setFormPage(formPage - 1)}>\r\n              <Translation>{t => t('common.previous')}</Translation>\r\n            </Button>\r\n            <Button onClick={() => handlePageSubmit()}>\r\n              <Translation>{t => t('common.next')}</Translation>\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Page3a\r\n","import React from 'react'\r\nimport { Form, Row, Col } from 'react-bootstrap'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst CheckBoxInput = props => {\r\n  const { t } = useTranslation()\r\n  const { label } = props\r\n  const { field, form } = props\r\n  const { errors, touched } = form\r\n\r\n  const error = errors[field.name] && touched[field.name] ? errors[field.name] : false\r\n  const isValid = !error && touched[field.name]\r\n\r\n  return (\r\n    <Form.Group>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Form.Check\r\n            {...props}\r\n            {...field}\r\n            isInvalid={error}\r\n            isValid={isValid}\r\n            label={t(label)}\r\n          ></Form.Check>\r\n        </Col>\r\n      </Row>\r\n    </Form.Group>\r\n  )\r\n}\r\n\r\nexport default CheckBoxInput\r\n","import React from 'react'\r\nimport { Field, FieldArray } from 'formik'\r\nimport { Row, Col, Button, ButtonGroup, Form, Card } from 'react-bootstrap'\r\nimport { useTranslation, Translation } from 'react-i18next'\r\nimport { toast } from 'react-toastify'\r\nimport privateRoad from '../../models/privateRoad'\r\nimport TextInput from '../inputs/TextInput'\r\nimport CheckBoxInput from '../inputs/CheckBoxInput'\r\nimport SelectInput from '../inputs/SelectInput'\r\n\r\nconst Page3b = props => {\r\n  const { t } = useTranslation()\r\n  const { values, formPage, setFormPage } = props\r\n\r\n  const handlePageSubmit = async () => {\r\n    try {\r\n      await privateRoad.schema.validate(values)\r\n      setFormPage(5)\r\n    } catch (exeption) {\r\n      toast.warning(t('common.pagevalidationerror'))\r\n    }\r\n  }\r\n\r\n  if (formPage !== 4) return null\r\n\r\n  const monthOptions = [...Array(13).keys()].map(month => {\r\n    return { value: month, text: `tie.kelirikko.${month}` }\r\n  })\r\n\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <Row className=\"mb-3 mt-3\">\r\n          <Col>\r\n            <h2>{t('map.submit_changed_or_missing_info')}</h2>\r\n          </Col>\r\n        </Row>\r\n        <FieldArray\r\n          name=\"roads\"\r\n          render={({ push, remove }) => (\r\n            <>\r\n              {values.roads.map((road, index) => (\r\n                <Card key={index} className=\"mt-3\">\r\n                  <Card.Header>\r\n                    <Row sm={10}>\r\n                      <Col>\r\n                        <h4>{`${t('tie.added_road')} (${index + 1}/${values.roads.length})`}</h4>\r\n                      </Col>\r\n                      <Col sm={2} className=\"d-flex flex-column\">\r\n                        <Button onClick={() => remove(index)} variant=\"danger\">\r\n                          {t('tie.poista_tie')}\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Header>\r\n                  <div className=\"border\">\r\n                    <Col className=\"mt-3\">\r\n                      <Field\r\n                        name={`roads.${index}.tiekunnanTienNimi`}\r\n                        required\r\n                        label=\"tie.road_name\"\r\n                        info=\"tie.road_name_info\"\r\n                        component={TextInput}\r\n                      ></Field>\r\n                    </Col>\r\n                  </div>\r\n\r\n                  <Col className=\"border\">\r\n                    <div className=\"mt-3\">\r\n                      <Field\r\n                        name={`roads.${index}.painorajoitus`}\r\n                        label=\"tie.ei_rajoituksia\"\r\n                        component={CheckBoxInput}\r\n                      ></Field>\r\n                    </div>\r\n                    <Form.Group as=\"div\">\r\n                      <Row>\r\n                        <Col>\r\n                          <Field\r\n                            name={`roads.${index}.painorajoitus_suurin_massa`}\r\n                            label=\"tie.painorajoitus\"\r\n                            info=\"tie.painorajoitus_info\"\r\n                            component={TextInput}\r\n                          ></Field>\r\n                        </Col>\r\n                        <Col>\r\n                          <Field\r\n                            name={`roads.${index}.painorajoitus_lisakilvet`}\r\n                            label=\"tie.painorajoitus_lisakilvet\"\r\n                            info=\"tie.painorajoitus_lisakilvet_info\"\r\n                            component={TextInput}\r\n                          ></Field>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form.Group>\r\n                  </Col>\r\n\r\n                  <Col className=\"border\">\r\n                    <div className=\"mt-3\">\r\n                      <Field\r\n                        name={`roads.${index}.kelirikkoToistuva`}\r\n                        label=\"tie.toistuva_kelirikko\"\r\n                        component={CheckBoxInput}\r\n                      ></Field>\r\n                    </div>\r\n\r\n                    {values.roads[index].kelirikkoToistuva && (\r\n                      <>\r\n                        <Field\r\n                          name={`roads.${index}.kelirikkoPainorajoitus`}\r\n                          label=\"tie.kelirikko_painorajoitus\"\r\n                          component={TextInput}\r\n                        ></Field>\r\n\r\n                        <Row>\r\n                          <Col xs={4}>\r\n                            <Field\r\n                              label=\"tie.kelirikon_alkaminen\"\r\n                              name={`roads.${index}.kelirikkoAlkuKuukausi`}\r\n                              options={monthOptions}\r\n                              component={SelectInput}\r\n                            ></Field>\r\n                          </Col>\r\n                          <Col xs={2}>\r\n                            <Field\r\n                              name={`roads.${index}.kelirikkoAlkuAika`}\r\n                              options={[\r\n                                { value: 'alku', text: 'tie.kelirikko.alku' },\r\n                                { value: 'keski', text: 'tie.kelirikko.keski' },\r\n                                { value: 'loppu', text: 'tie.kelirikko.loppu' }\r\n                              ]}\r\n                              component={SelectInput}\r\n                            ></Field>\r\n                          </Col>\r\n\r\n                          <Col xs={4}>\r\n                            <Field\r\n                              label=\"tie.kelirikon_paattyminen\"\r\n                              name={`roads.${index}.kelirikkoLoppuKuukausi`}\r\n                              options={monthOptions}\r\n                              component={SelectInput}\r\n                            ></Field>\r\n                          </Col>\r\n\r\n                          <Col xs={2}>\r\n                            <Field\r\n                              name={`roads.${index}.kelirikkoLoppuAika`}\r\n                              options={[\r\n                                { value: 'alku', text: 'tie.kelirikko.alku' },\r\n                                { value: 'keski', text: 'tie.kelirikko.keski' },\r\n                                { value: 'loppu', text: 'tie.kelirikko.loppu' }\r\n                              ]}\r\n                              component={SelectInput}\r\n                            ></Field>\r\n                          </Col>\r\n                        </Row>\r\n                      </>\r\n                    )}\r\n                  </Col>\r\n\r\n                  <Col className=\"border\">\r\n                    <div className=\"mt-3\">\r\n                      <Field\r\n                        name={`roads.${index}.ajokielto`}\r\n                        label=\"tie.ajokielto\"\r\n                        component={TextInput}\r\n                      ></Field>\r\n                    </div>\r\n\r\n                    <Field\r\n                      name={`roads.${index}.ajokieltoLisakilvet`}\r\n                      label=\"tie.ajokiellon_lisakilvet\"\r\n                      component={TextInput}\r\n                    ></Field>\r\n                  </Col>\r\n\r\n                  <Col className=\"border\">\r\n                    <div className=\"mt-3\">\r\n                      <Field\r\n                        name={`roads.${index}.ajoesteTiella`}\r\n                        label=\"tie.ajoeste_tiella\"\r\n                        component={CheckBoxInput}\r\n                      ></Field>\r\n                    </div>\r\n                    {values.roads[index].ajoesteTiella && (\r\n                      <Form.Group as=\"div\">\r\n                        <Row>\r\n                          <Col>\r\n                            <Field\r\n                              name={`roads.${index}.ajoesteTyyppi`}\r\n                              label=\"tie.ajoesteen_tyyppi\"\r\n                              options={[\r\n                                { value: null, text: 'map.select' },\r\n                                { value: 'avattava puomi', text: 'tie.ajoeste1' },\r\n                                { value: 'suljettu yhteys', text: 'tie.ajoeste2' }\r\n                              ]}\r\n                              component={SelectInput}\r\n                            ></Field>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form.Group>\r\n                    )}\r\n                  </Col>\r\n\r\n                  <div className=\"border\">\r\n                    <Col className=\"mt-3\">\r\n                      <Field\r\n                        name={`roads.${index}.nopeusRajoitus`}\r\n                        label=\"tie.nopeusrajoitus\"\r\n                        options={[\r\n                          { value: ' ', text: 'map.select' },\r\n                          { value: '20 Km/h', text: 'tie.nopeus20' },\r\n                          { value: '30 Km/h', text: 'tie.nopeus30' },\r\n                          { value: '40 Km/h', text: 'tie.nopeus40' },\r\n                          { value: '50 Km/h', text: 'tie.nopeus50' },\r\n                          { value: '60 Km/h', text: 'tie.nopeus60' }\r\n                        ]}\r\n                        component={SelectInput}\r\n                      ></Field>\r\n                    </Col>\r\n                  </div>\r\n\r\n                  <div className=\"border\">\r\n                    <Col className=\"mt-3\">\r\n                      <Field\r\n                        name={`roads.${index}.karttaLinkit`}\r\n                        type=\"textarea\"\r\n                        label=\"tie.karttalinkit\"\r\n                        component={TextInput}\r\n                      ></Field>\r\n                    </Col>\r\n                  </div>\r\n\r\n                  <div className=\"border\">\r\n                    <Col className=\"mt-3\">\r\n                      <Field\r\n                        name={`roads.${index}.muutTiedot`}\r\n                        type=\"textarea\"\r\n                        label=\"tie.muut_merkit_ja_rajoitukset\"\r\n                        component={TextInput}\r\n                      ></Field>\r\n                    </Col>\r\n                  </div>\r\n                </Card>\r\n              ))}\r\n              <Row className=\"mt-3\">\r\n                <Col></Col>\r\n                <Col className=\"col-auto\">\r\n                  <Button size=\"lg\" variant=\"success\" onClick={() => push({})}>\r\n                    {t('tie.lisaa_tie')}\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </>\r\n          )}\r\n        ></FieldArray>\r\n\r\n        <Row className=\"mt-3 mb-5\">\r\n          <Col>\r\n            <ButtonGroup>\r\n              <Button onClick={() => setFormPage(2)}>\r\n                <Translation>{t => t('common.previous')}</Translation>\r\n              </Button>\r\n              <Button onClick={() => handlePageSubmit()}>\r\n                <Translation>{t => t('common.next')}</Translation>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default Page3b\r\n","import React from 'react'\r\nimport { Col, Row, Form } from 'react-bootstrap'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst SummaryInfoField = ({ title, content }) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Form.Group>\r\n      <Row>\r\n        <Col>\r\n          <Form.Label className=\"font-weight-bold\">{`${t(title)}:`}</Form.Label>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Form.Label>{content}</Form.Label>\r\n        </Col>\r\n      </Row>\r\n    </Form.Group>\r\n  )\r\n}\r\n\r\nexport default SummaryInfoField\r\n","import React from 'react'\r\nimport { Col, Row, Form } from 'react-bootstrap'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst DeliveryMethod = props => {\r\n  const { t } = useTranslation()\r\n  const { email } = props\r\n  const { field, form } = props\r\n  const { errors, touched } = form\r\n\r\n  const error = errors[field.name] && touched[field.name] ? errors[field.name] : false\r\n  const isValid = !error && touched[field.name]\r\n\r\n  return (\r\n    <div className=\"mt-6\">\r\n      <Row className=\"mb-4 mt-5\">\r\n        <Col>\r\n          <h6>{t('summary.tositeliiteToimitus')}</h6>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-4\">\r\n        <Col>\r\n          <Form.Control as=\"select\" {...props} {...field} isInvalid={error} isValid={isValid}>\r\n            <option value=\"\">{t('map.select')}</option>\r\n            {email ? (\r\n              <option value=\"email\">{t('summary.tositeliiteOption1')}</option>\r\n            ) : (\r\n              <option value=\"email\" disabled>\r\n                {t('summary.tositeliiteOption1')}\r\n              </option>\r\n            )}\r\n\r\n            <option value=\"download\">{t('summary.tositeliiteOption2')}</option>\r\n\r\n            {email ? (\r\n              <option value=\"emailAndDownload\">{t('summary.tositeliiteOption3')}</option>\r\n            ) : (\r\n              <option value=\"emailAndDownload\" disabled>\r\n                {t('summary.tositeliiteOption3')}\r\n              </option>\r\n            )}\r\n          </Form.Control>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeliveryMethod\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { Col, Row, ButtonGroup, Button, Card, Spinner } from 'react-bootstrap'\r\nimport { Field } from 'formik'\r\nimport ReCAPTCHA from 'react-google-recaptcha'\r\nimport SummaryInfoField from './SummaryInfoField'\r\nimport DeliveryMethod from './DeliveryMethod'\r\nimport CheckBoxInput from '../inputs/CheckBoxInput'\r\n\r\nconst Page4 = props => {\r\n  const { t } = useTranslation()\r\n  const { formPage, setFormPage, values, setValues, isSubmitting } = props\r\n\r\n  if (formPage !== 5) return null\r\n\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <h2>{t('summary.title')}</h2>\r\n          </Col>\r\n        </Row>\r\n        <Card className=\"p-3\">\r\n          <SummaryInfoField title=\"tiekunta.tiekunta\" content={values.tiekunta} />\r\n          <SummaryInfoField title=\"tiekunta.municipality\" content={values.kunta} />\r\n          <SummaryInfoField\r\n            title=\"tiekunta.kayttooikeusyksikkotunnus\"\r\n            content={values.kayttooikeusyksikkotunnus}\r\n          />\r\n          <SummaryInfoField title=\"tiekunta.informants_name\" content={values.ilmoittaja} />\r\n          <SummaryInfoField title=\"tiekunta.phone_number\" content={values.puhelinnumero} />\r\n          <SummaryInfoField title=\"tiekunta.email_address\" content={values.email} />\r\n          <SummaryInfoField title=\"tiekunta.suhde_tiehen\" content={values.ilmoittajaSuhde} />\r\n        </Card>\r\n\r\n        {values.tiekuntaDigiroadissa === 'true' && (\r\n          <>\r\n            <Row className=\"mt-5 mb-5\">\r\n              <Col>\r\n                <Row>\r\n                  <h4>{t('map.already_submitted_no_changes')}</h4>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            {values.roads.map((road, index) => {\r\n              return (\r\n                <SummaryInfoField\r\n                  key={index}\r\n                  title=\"tie.road_name_2\"\r\n                  content={road.tiekunnanTienNimi}\r\n                />\r\n              )\r\n            })}\r\n          </>\r\n        )}\r\n\r\n        {values.tiekuntaDigiroadissa === 'false' &&\r\n          values.roads.map((road, index) => (\r\n            <Card key={index} className=\"p-3 mt-3\">\r\n              <Card.Header>\r\n                {`${t('tie.added_road')} (${index + 1}/${values.roads.length})`}\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <SummaryInfoField title=\"tie.road_name\" content={road.tiekunnanTienNimi} />\r\n                <SummaryInfoField\r\n                  title=\"tie.painorajoitus\"\r\n                  content={\r\n                    road.painorajoitus\r\n                      ? t('summary.painorajoitus_true') + ` - ${road.painorajoitus_suurin_massa}`\r\n                      : t('summary.painorajoitus_false')\r\n                  }\r\n                />\r\n                {road.painorajoitus && (\r\n                  <SummaryInfoField\r\n                    title=\"tie.painorajoitus_lisakilvet\"\r\n                    content={road.painorajoitus_lisakilvet}\r\n                  />\r\n                )}\r\n                <SummaryInfoField\r\n                  title=\"tie.toistuva_kelirikko\"\r\n                  content={road.kelirikkoToistuva ? t('common.yes') : t('common.no')}\r\n                />\r\n                {road.kelirikkoToistuva && (\r\n                  <>\r\n                    <SummaryInfoField\r\n                      title=\"tie.kelirikon_alkaminen\"\r\n                      content={`${t(`tie.kelirikko.${road.kelirikkoAlkuKuukausi}`)} ${t(\r\n                        `tie.kelirikko.${road.kelirikkoAlkuAika}`\r\n                      )} `}\r\n                    />\r\n                    <SummaryInfoField\r\n                      title=\"tie.kelirikon_paattyminen\"\r\n                      content={`${t(`tie.kelirikko.${road.kelirikkoLoppuKuukausi}`)} ${t(\r\n                        `tie.kelirikko.${road.kelirikkoLoppuAika}`\r\n                      )} `}\r\n                    />\r\n                  </>\r\n                )}\r\n                <SummaryInfoField\r\n                  title=\"tie.ajokielto\"\r\n                  content={road.ajokielto ? t('common.yes') : t('common.no')}\r\n                />\r\n                {values.ajokielto && (\r\n                  <SummaryInfoField\r\n                    title=\"tie.ajokiellon_lisakilvet\"\r\n                    content={road.ajokieltoLisakilvet}\r\n                  />\r\n                )}\r\n                <SummaryInfoField\r\n                  title=\"tie.ajoeste_tiella\"\r\n                  content={road.ajoesteTiella ? t('common.yes') : t('common.no')}\r\n                />\r\n                {road.ajoesteTyyppi === 'avattava puomi' && (\r\n                  <SummaryInfoField title=\"tie.ajoesteen_tyyppi\" content={t('tie.ajoeste1')} />\r\n                )}\r\n                {road.ajoesteTyyppi === 'suljettu yhteys' && (\r\n                  <SummaryInfoField title=\"tie.ajoesteen_tyyppi\" content={t('tie.ajoeste2')} />\r\n                )}\r\n                <SummaryInfoField title=\"tie.nopeusrajoitus\" content={road.nopeusRajotus} />\r\n                <SummaryInfoField title=\"tie.karttalinkit\" content={road.karttaLinkit} />\r\n                <SummaryInfoField\r\n                  title=\"tie.muut_merkit_ja_rajoitukset\"\r\n                  content={road.muutTiedot}\r\n                />\r\n              </Card.Body>\r\n            </Card>\r\n          ))}\r\n\r\n        {isSubmitting ? (\r\n          <Row className=\"justify-content-center m-5\">\r\n            <Spinner\r\n              style={{ width: '5rem', height: '5rem' }}\r\n              animation=\"border\"\r\n              role=\"status\"\r\n              size=\"lg\"\r\n              variant=\"primary\"\r\n            >\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          </Row>\r\n        ) : (\r\n          <>\r\n            <Field email={values.email} name=\"toimitusTapa\" component={DeliveryMethod}></Field>\r\n            <Field\r\n              name=\"tietojenOikeellisuus\"\r\n              label=\"summary.tietojenOikeellisuus\"\r\n              component={CheckBoxInput}\r\n            ></Field>\r\n            <Row className=\"mb-4 justify-content-center\">\r\n              <ReCAPTCHA\r\n                sitekey=\"6LdQjsAUAAAAAAZ3kIzTwPPfJzeKY5dgU4RWoghB\"\r\n                onChange={value => {\r\n                  setValues({ ...values, reCAPTCHA: value })\r\n                }}\r\n              />\r\n            </Row>\r\n            <div className=\"d-flex flex-column mb-5\">\r\n              <ButtonGroup size=\"lg\">\r\n                <Button onClick={() => setFormPage(1)}>{t('summary.muuta_vastauksia')}</Button>\r\n                <Button\r\n                  variant=\"success\"\r\n                  type=\"submit\"\r\n                  disabled={\r\n                    !values.tietojenOikeellisuus || !values.toimitusTapa || !values.reCAPTCHA\r\n                  }\r\n                >\r\n                  {t('common.submit')}\r\n                </Button>\r\n              </ButtonGroup>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default Page4\r\n","import React, { useState } from 'react'\r\nimport { withFormik, Form as FormikForm } from 'formik'\r\nimport model from '../../models'\r\nimport FileSaver from 'file-saver'\r\nimport { submitPrivateRoad } from '../../services/privateRoadService'\r\nimport Page1 from './Page1'\r\nimport Page2 from './Page2'\r\nimport Page3a from './Page3a'\r\nimport Page3b from './Page3b'\r\nimport Page4 from './Page4'\r\n\r\nconst PrivateRoadForm = props => {\r\n  const [formPage, setFormPage] = useState(1)\r\n\r\n  return (\r\n    <FormikForm>\r\n      <Page1 {...props} formPage={formPage} setFormPage={setFormPage} />\r\n      <Page2 {...props} formPage={formPage} setFormPage={setFormPage} />\r\n      <Page3a {...props} formPage={formPage} setFormPage={setFormPage} />\r\n      <Page3b {...props} formPage={formPage} setFormPage={setFormPage} />\r\n      <Page4 {...props} formPage={formPage} setFormPage={setFormPage} />\r\n    </FormikForm>\r\n  )\r\n}\r\n\r\nconst FormikEnhncer = withFormik({\r\n  validationSchema: model.privateRoadYupSchema,\r\n  mapPropsToValues() {\r\n    return model.privateRoadYupInitialValues\r\n  },\r\n  async handleSubmit(values, formikBag) {\r\n    const kuukaudet = [\r\n      '',\r\n      'Tammikuu',\r\n      'Helmikuu',\r\n      'Maaliskuu',\r\n      'Huhtikuu',\r\n      'Toukokuu',\r\n      'Kesäkuu',\r\n      'Heinäkuu',\r\n      'Elokuu',\r\n      'Syyskuu',\r\n      'Lokakuu',\r\n      'Marraskuu',\r\n      'joulukuu'\r\n    ]\r\n\r\n    const roads = values.roads.map(road => {\r\n      return {\r\n        ...road,\r\n        kelirikkoAlkuKuukausi: kuukaudet[road.kelirikkoAlkuKuukausi],\r\n        kelirikkoLoppuKuukausi: kuukaudet[road.kelirikkoLoppuKuukausi]\r\n      }\r\n    })\r\n    values.roads = roads\r\n\r\n    const response = await submitPrivateRoad(values)\r\n\r\n    FileSaver(response.data, 'Digiroad_tosite.pdf')\r\n\r\n    formikBag.props.setPage(2)\r\n  }\r\n})(PrivateRoadForm)\r\n\r\nexport default FormikEnhncer\r\n\r\n// const initial_page_one = {\r\n//   tiekunta: 'Digiroadin yksityistiekunta',\r\n//   kunta: 'Espoo',\r\n//   kayttooikeusyksikkotunnus: 'YT-3450927',\r\n//   ilmoittaja: 'Tommi Lehtisaari',\r\n//   puhelinnumero: '040-7654321',\r\n//   email: 'tommi.lehtisaari@sitowise.com',\r\n//   ilmoittajaSuhde: 'Yksityistiekunnan jäsen'\r\n// }\r\n\r\n// const initial_page_two = {\r\n//   tiekuntaDigiroadissa: false\r\n// }\r\n\r\n// const initial_page_three = {\r\n//   roads: [\r\n//     {\r\n//       tiekunnanTienNimi: 'Tuulikuja',\r\n//       painorajoitus: true,\r\n//       painorajoitus_suurin_massa: '8000 Kg',\r\n//       painorajoitus_lisakilvet: 'LISAKILPI',\r\n//       kelirikkoToistuva: true,\r\n//       kelirikkoPainorajoitus: '3000 KG',\r\n//       kelirikkoAlkuKuukausi: 1,\r\n//       kelirikkoAlkuAika: 'alku',\r\n//       kelirikkoLoppuKuukausi: 3,\r\n//       kelirikkoLoppuAika: 'loppu',\r\n//       ajokielto: '',\r\n//       ajokieltoLisakilvet: '',\r\n//       ajoesteTiella: false,\r\n//       ajoesteTyyppi: '',\r\n//       nopeusRajotus: '',\r\n//       karttaLinkit: '',\r\n//       muutTiedot: ''\r\n//     },\r\n//     {\r\n//       tiekunnanTienNimi: 'Linnoitustie',\r\n//       painorajoitus: true,\r\n//       painorajoitus_suurin_massa: '7000 Kg',\r\n//       painorajoitus_lisakilvet: 'LISAKILPI',\r\n//       kelirikkoToistuva: true,\r\n//       kelirikkoPainorajoitus: '3000 KG',\r\n//       kelirikkoAlkuKuukausi: 12,\r\n//       kelirikkoAlkuAika: 'alku',\r\n//       kelirikkoLoppuKuukausi: 3,\r\n//       kelirikkoLoppuAika: 'loppu',\r\n//       ajokielto: '',\r\n//       ajokieltoLisakilvet: '',\r\n//       ajoesteTiella: false,\r\n//       ajoesteTyyppi: '',\r\n//       nopeusRajotus: '40 KM/h',\r\n//       karttaLinkit: '',\r\n//       muutTiedot: ''\r\n//     }\r\n//   ]\r\n// }\r\n\r\n// const testValues = {\r\n//   ...initial_page_one,\r\n//   ...initial_page_two,\r\n//   ...initial_page_three\r\n// }\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { Row, Col, Button } from 'react-bootstrap'\r\n\r\nconst digiroadLink = 'https://vayla.fi/avoindata/digiroad'\r\n\r\nconst ExitPage = () => {\r\n  const { t } = useTranslation()\r\n\r\n  const redirectUser = () => {\r\n    window.location.href = digiroadLink\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <Row className=\"mb-3\">\r\n          <Col className=\"text-center\">\r\n            <h2>{t('thankyou.title')}</h2>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mb-3\">\r\n          <Col className=\"text-center\">\r\n            <p>{t('thankyou.tarkistaTositeliite')}</p>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mb-3\">\r\n          <Col className=\"text-center\">\r\n            <p>{t('thankyou.bodytext')}</p>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mb-3\">\r\n          <Col className=\"text-center\">\r\n            <p>{t('thankyou.close_tab')}</p>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"text-center\">\r\n          <Col>\r\n            <Button type=\"button\" size=\"lg\" variant=\"primary\" onClick={redirectUser}>\r\n              {t('thankyou.redirect')}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ExitPage\r\n","import React, { useState } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport { ToastContainer } from 'react-toastify'\r\n\r\nimport Language from './util/Language'\r\nimport LandingPage from './components/Landingpage'\r\nimport PrivateRoadForm from './components/privateRoadForm'\r\nimport ExitPage from './components/ExitPage'\r\n\r\nconst App = () => {\r\n  const [page, setPage] = useState(0)\r\n  return (\r\n    <Container fluid={false}>\r\n      <ToastContainer />\r\n      <Row className=\"mb-3 mt-3\">\r\n        <Col>\r\n          <Language />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {page === 0 && <LandingPage setPage={setPage} />}\r\n          {page === 1 && <PrivateRoadForm page={page} setPage={setPage} />}\r\n          {page === 2 && <ExitPage />}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './i18n'\r\n// Styles\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport './index.css'\r\n// Components\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}